// <auto-generated />
using System;
using Arix.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Arix.DataAccess.Migrations
{
    [DbContext(typeof(ArixDbContext))]
    [Migration("20250811223807_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Arix.Contracts.Models.Bot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<decimal>("Deposit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Leverage")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TradingPair")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Bot");
                });

            modelBuilder.Entity("Arix.Contracts.Models.ExitTradeCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BotId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EnableStopLoss")
                        .HasColumnType("bit");

                    b.PrimitiveCollection<string>("Profit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("StopLoss")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("TakeProfitBySignal")
                        .HasColumnType("bit");

                    b.Property<bool?>("TerminateBotAfterStopLossExecution")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BotId");

                    b.ToTable("ExitTradeConditions");
                });

            modelBuilder.Entity("Arix.Contracts.Models.Filter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExecutionType")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("ExitTradeConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Indicator")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("IntervalMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Operator")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<decimal>("ThresholdValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("TradeEntryConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExitTradeConditionId");

                    b.HasIndex("TradeEntryConditionId");

                    b.ToTable("Filter");
                });

            modelBuilder.Entity("Arix.Contracts.Models.TradeEntryCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BotId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BotId");

                    b.ToTable("TradeEntryConditions");
                });

            modelBuilder.Entity("Arix.Contracts.Models.TradingMode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AmountAfterToStop")
                        .HasColumnType("int");

                    b.Property<Guid?>("BotId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GridOrdersCount")
                        .HasColumnType("int");

                    b.Property<bool>("IncludeExchangePositionInTrade")
                        .HasColumnType("bit");

                    b.Property<decimal>("IndentRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LogarithmicDistributionRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("LogarithmicPriceDistribution")
                        .HasColumnType("bit");

                    b.Property<decimal>("MartingaleRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OverlappingPriceChangeRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PartialAmountOfGridOrders")
                        .HasColumnType("int");

                    b.Property<decimal>("PullingUpGridOrderRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("StopBotAfterDealsCompleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BotId");

                    b.ToTable("TradingModes");
                });

            modelBuilder.Entity("Arix.Contracts.Models.ExitTradeCondition", b =>
                {
                    b.HasOne("Arix.Contracts.Models.Bot", null)
                        .WithMany("ExitTradeCondition")
                        .HasForeignKey("BotId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Arix.Contracts.Models.Filter", b =>
                {
                    b.HasOne("Arix.Contracts.Models.ExitTradeCondition", null)
                        .WithMany("Filters")
                        .HasForeignKey("ExitTradeConditionId");

                    b.HasOne("Arix.Contracts.Models.TradeEntryCondition", null)
                        .WithMany("Filters")
                        .HasForeignKey("TradeEntryConditionId");
                });

            modelBuilder.Entity("Arix.Contracts.Models.TradeEntryCondition", b =>
                {
                    b.HasOne("Arix.Contracts.Models.Bot", null)
                        .WithMany("TradeEntryCondition")
                        .HasForeignKey("BotId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Arix.Contracts.Models.TradingMode", b =>
                {
                    b.HasOne("Arix.Contracts.Models.Bot", null)
                        .WithMany("TradingMode")
                        .HasForeignKey("BotId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Arix.Contracts.Models.Bot", b =>
                {
                    b.Navigation("ExitTradeCondition");

                    b.Navigation("TradeEntryCondition");

                    b.Navigation("TradingMode");
                });

            modelBuilder.Entity("Arix.Contracts.Models.ExitTradeCondition", b =>
                {
                    b.Navigation("Filters");
                });

            modelBuilder.Entity("Arix.Contracts.Models.TradeEntryCondition", b =>
                {
                    b.Navigation("Filters");
                });
#pragma warning restore 612, 618
        }
    }
}
